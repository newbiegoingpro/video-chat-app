{"version":3,"sources":["server/socket.js","hooks/useStateWithCallback.js","hooks/useWebRtc.js","Room.jsx","Main.jsx","NotFound.jsx","App.js","index.js","server/actions.js"],"names":["socket","io","reconnectionAttempts","timeout","transports","useStateWithCallback","initState","useState","state","setState","callbackRef","useRef","updateState","useCallback","newState","callback","current","prev","useEffect","LOCAL_VIDEO","Room","roomID","clients","updateClients","addNewClient","newClient","cb","includes","list","peerConnections","localMediaStream","peerMediaElements","a","peerID","createOffer","console","warn","RTCPeerConnection","iceServers","freeice","onicecandidate","event","candidate","emit","ACTIONS","RELAY_ICE","iceCandidate","tracks","ontrack","remoteStream","streams","srcObject","setTimeout","getTracks","forEach","track","addTrack","offer","setLocalDescription","RELAY_SDP","sessionDescription","on","ADD_PEER","off","remoteDescription","setRemoteDescription","RTCSessionDescription","type","createAnswer","answer","SESSION_DESCRIPTION","ICE_CANDIDATE","addIceCandidate","RTCIceCandidate","REMOVE_PEER","close","filter","c","navigator","mediaDevices","getUserMedia","audio","video","width","height","localVideoElement","volume","startCapture","then","JOIN","room","catch","e","error","stop","LEAVE","provideMediaRef","id","node","useWebRtc","useParams","log","videoLayout","clientsNumber","pairsOfClients","Array","from","length","reduce","acc","next","index","arr","push","slice","numberOfPairs","heigth","map","row","flat","layout","style","display","alignItems","justifyContent","flexWrap","client","autoPlay","playsInline","muted","ref","instance","Main","React","rooms","setRooms","history","useNavigate","rootNode","SHARE_ROOMS","onClick","v4","NotFound","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c8ab48de.chunk.js","sourcesContent":["import {io} from \"socket.io-client\";\r\n\r\nconst options = {\r\n    \"force new connections\": true,\r\n    reconnectionAttempts: 'Infinity',\r\n    timeout: 10000,\r\n    transports: ['websocket']\r\n};\r\n\r\nconst socket = io(\"http://localhost:3001\", options);\r\n\r\nexport default socket;","import { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nconst useStateWithCallback = (initState) => {\r\n    const [state, setState] = useState(initState);\r\n    const callbackRef = useRef(null);\r\n\r\n    const updateState = useCallback((newState, callback) => {\r\n        callbackRef.current = callback;\r\n\r\n        setState(prev => typeof newState === 'function' ? newState(prev) : newState)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (callbackRef.current) {\r\n            callbackRef.current(state);\r\n            callbackRef.current = null;\r\n        }\r\n    }, [state])\r\n\r\n    return [state, updateState]\r\n}\r\n\r\nexport default useStateWithCallback","import { useCallback, useEffect, useRef } from \"react\";\r\nimport ACTIONS from \"../server/actions\";\r\nimport socket from \"../server/socket\";\r\nimport useStateWithCallback from \"./useStateWithCallback\";\r\nimport freeice from 'freeice';\r\n\r\n\r\n\r\nexport const LOCAL_VIDEO = 'LOCAL_VIDEO';\r\n\r\nexport default function useWebRtc(roomID) {\r\n    const [clients, updateClients] = useStateWithCallback([]);\r\n\r\n    const addNewClient = useCallback((newClient, cb) => {\r\n      if (!clients.includes(newClient)) {\r\n        updateClients(list => [...list, newClient], cb);\r\n      }\r\n    }, [clients, updateClients]);\r\n  \r\n    const peerConnections = useRef({});\r\n    const localMediaStream = useRef(null);\r\n    const peerMediaElements = useRef({\r\n      [LOCAL_VIDEO]: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function handleNewPeer({ peerID, createOffer }) {\r\n            if (peerID in peerConnections.current) {\r\n                return console.warn(`Already connected to peer ${peerID}`)\r\n            }\r\n            peerConnections.current[peerID] = new RTCPeerConnection({\r\n                iceServers: freeice(),\r\n\r\n            });\r\n\r\n            peerConnections.current[peerID].onicecandidate = event => {\r\n                if (event.candidate) {\r\n                    socket.emit(ACTIONS.RELAY_ICE, {\r\n                        peerID,\r\n                        iceCandidate: event.candidate,\r\n                    })\r\n                }\r\n            }\r\n\r\n            let tracks = 0;\r\n            peerConnections.current[peerID].ontrack = ({ streams: [remoteStream] }) => {\r\n                tracks++\r\n                if (tracks === 2) { // video & audio tracks received\r\n                    addNewClient(peerID, () => {\r\n                      if (peerMediaElements.current[peerID]) {\r\n                        peerMediaElements.current[peerID].srcObject = remoteStream;\r\n                      } else {\r\n                        setTimeout(() => {\r\n                          peerMediaElements.current[peerID].srcObject = remoteStream;\r\n                        }, 1000);\r\n                      }\r\n                }\r\n                )\r\n            \r\n        }}\r\n        localMediaStream.current.getTracks().forEach(track => {\r\n            peerConnections.current[peerID].addTrack(track, localMediaStream.current);\r\n        });\r\n\r\n        if (createOffer) {\r\n            const offer = await peerConnections.current[peerID].createOffer();\r\n\r\n            await peerConnections.current[peerID].setLocalDescription(offer);\r\n\r\n            socket.emit(ACTIONS.RELAY_SDP, {\r\n                peerID,\r\n                sessionDescription: offer,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n        socket.on(ACTIONS.ADD_PEER, handleNewPeer);\r\n\r\n        return () => {\r\n            socket.off(ACTIONS.ADD_PEER);\r\n          }\r\n    }, [])\r\n\r\n\r\nuseEffect(() => {\r\n    async function setRemoteMedia({ peerID, sessionDescription: remoteDescription }){\r\n        await peerConnections.current[peerID].setRemoteDescription(new RTCSessionDescription(remoteDescription));\r\n\r\n        if (remoteDescription.type === 'offer') {\r\n            const answer = await peerConnections.current[peerID].createAnswer();\r\n            await peerConnections.current[peerID].setLocalDescription(answer);\r\n            socket.emit(ACTIONS.RELAY_SDP, {\r\n                peerID,\r\n                sessionDescription: answer\r\n            })\r\n\r\n        }\r\n    }\r\n    socket.on(ACTIONS.SESSION_DESCRIPTION, setRemoteMedia)\r\n    return () => {\r\n        socket.off(ACTIONS.SESSION_DESCRIPTION);\r\n      }\r\n}, []);\r\n\r\nuseEffect(() => {\r\n    socket.on(ACTIONS.ICE_CANDIDATE, ({ peerID, iceCandidate }) => {\r\n        peerConnections.current[peerID]?.addIceCandidate(new RTCIceCandidate(iceCandidate))\r\n    })\r\n    return () => {\r\n        socket.off(ACTIONS.ICE_CANDIDATE);\r\n      }\r\n}, []);\r\n\r\nuseEffect(() => {\r\n    const handleRemovePeer = ({ peerID }) => {\r\n        if (peerConnections.current[peerID]) {\r\n            peerConnections.current[peerID].close();\r\n        }\r\n        delete peerConnections.current[peerID];\r\n        delete peerMediaElements.current[peerID];\r\n\r\n        updateClients(list => list.filter(c => c !== peerID));\r\n    }\r\n    socket.on(ACTIONS.REMOVE_PEER, handleRemovePeer);\r\n    return () => {\r\n        socket.off(ACTIONS.REMOVE_PEER);\r\n      }\r\n}, [])\r\n\r\nuseEffect(() => {\r\n    async function startCapture() {\r\n        localMediaStream.current = await navigator.mediaDevices.getUserMedia({\r\n            audio: true,\r\n            video: {\r\n                width: 720,\r\n                height: 480\r\n            }\r\n        });\r\n        addNewClient(LOCAL_VIDEO, () => {\r\n            const localVideoElement = peerMediaElements.current[LOCAL_VIDEO];\r\n\r\n            if (localVideoElement) {\r\n                localVideoElement.volume = 0;\r\n                localVideoElement.srcObject = localMediaStream.current;\r\n            }\r\n        });\r\n    };\r\n    startCapture()\r\n        .then(() => socket.emit(ACTIONS.JOIN, { room: roomID }))\r\n        .catch(e => console.error('Error getting userMedia:', e));\r\n\r\n    //cleanup\r\n    return () => {\r\n        localMediaStream.current.getTracks().forEach(track => track.stop());\r\n\r\n        socket.emit(ACTIONS.LEAVE);\r\n    }\r\n}, [roomID]);\r\n\r\n\r\nconst provideMediaRef = useCallback((id, node) => {\r\n    peerMediaElements.current[id] = node;\r\n}, [])\r\n\r\nreturn { clients, provideMediaRef };\r\n}","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport useWebRtc, { LOCAL_VIDEO } from './hooks/useWebRtc';\r\n\r\nfunction layout(clientsNumber = 1) {\r\n    const pairsOfClients = Array.from({ length: clientsNumber }).reduce((acc, next, index, arr) => {\r\n        if (index % 2 === 0) {\r\n            acc.push(arr.slice(index, index + 2))\r\n        }\r\n        return acc\r\n    }, [])\r\n    const numberOfPairs = pairsOfClients.length;\r\n    const heigth = `${100 / numberOfPairs}%`\r\n\r\n    return pairsOfClients.map((row, index, arr) => {\r\n        if (index === arr.length - 1 && row.length === 1) {\r\n            return [{\r\n                width: '100%',\r\n                heigth: heigth,\r\n            }]\r\n        }\r\n        return row.map(() => ({\r\n\r\n            width: '50%',\r\n            heigth\r\n        })\r\n        )\r\n    }).flat();\r\n}\r\n\r\nexport default function Room() {\r\n    const { id: roomId } = useParams();\r\n    const { clients, provideMediaRef } = useWebRtc(roomId);\r\n    console.log(clients);\r\n    const videoLayout = layout(clients.length);\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexWrap: 'wrap',\r\n            height: '100vh',\r\n        }}>\r\n            {clients.map((client, index) => (\r\n                <div key={client} style={videoLayout[index]}>\r\n                    <video\r\n                        width='100%'\r\n                        height='100%'\r\n                        autoPlay\r\n                        playsInline\r\n                        muted={client === LOCAL_VIDEO}\r\n                        ref={instance => {\r\n                            provideMediaRef(client, instance)\r\n                        }}\r\n                    />\r\n\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ACTIONS from './server/actions';\r\nimport socket from './server/socket';\r\nimport { useNavigate } from 'react-router';\r\nimport { v4 } from 'uuid';\r\n\r\nexport default function Main() {\r\n    const [rooms, setRooms] = React.useState([]);\r\n    const history = useNavigate();\r\n    const rootNode = React.useRef();\r\n    React.useEffect(() => {\r\n        socket.on(ACTIONS.SHARE_ROOMS, function ({ rooms = [] } = {}) {\r\n                if (rootNode.current) {\r\n                    setRooms(rooms);\r\n                }\r\n\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={rootNode}>\r\n            Main\r\n            <h1>Rooms</h1>\r\n\r\n            <ul>\r\n                {rooms.map(room => {\r\n                    return (\r\n                        <li key={room}>\r\n                            {room}\r\n                            <button onClick={() => { history(`/room/${room}`) }}>join</button>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n            <button onClick={() => { history(`/room/${v4()}`) }}>create new room</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            NotFound\r\n        </div>\r\n    )\r\n}\r\n","import Room from './Room.jsx';\nimport Main from './Main.jsx';\nimport NotFound from './NotFound.jsx';\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<Main/>}></Route>\n        <Route exact path=\"/room/:id\" element={<Room/>}></Route>\n        <Route path=\"*\" element={<NotFound/>}></Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","const ACTIONS  = {\r\n    JOIN: 'join',\r\n    LEAVE: 'leave',\r\n    ADD_PEER: 'add-peer',\r\n    REMOVE_PEER: 'remove-peer',\r\n    SHARE_ROOMS: 'share-room',\r\n    RELAY_SDP: 'relay-sdp',\r\n    RELAY_ICE: 'relay-ice',\r\n    ICE_CANDIDATE: 'ice-candidate',\r\n    SESSION_DESCRIPTION: 'session-description'\r\n};\r\n\r\nmodule.exports = ACTIONS;"],"sourceRoot":""}